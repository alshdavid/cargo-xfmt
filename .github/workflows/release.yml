name: Release

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - "main"

env:
  PROJECT_NAME: cargo-xfmt

jobs:
  test:
    name: üß™ Test
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: eval $(curl -sSf sh.davidalsh.com/rust.sh | sh)
      - run: cargo test

  format:
    name: üìù Format
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - run: eval $(curl -sSf sh.davidalsh.com/rust.sh | sh)
      - run: cargo run

  version:
    name: üåê Auto Version Increment
    runs-on: ubuntu-24.04
    outputs:
      VERSION: ${{ steps.generate.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4
      - id: generate
        run: |
          set -e
          LAST_VERSION=$(curl -sSL https://api.github.com/repos/alshdavid/$PROJECT_NAME/releases/latest | jq -r ".tag_name" | cut -d "." -f 3)
          if [ "$LAST_VERSION" = "" ]; then
            LAST_VERSION="0"
          fi
          declare -i var="$LAST_VERSION"
          var=$var+1
          VERSION="0.0.$var"

          echo $VERSION
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

  build:
    strategy:
      matrix:
        config:
          - name: üê• Linux AMD64
            runner: ubuntu-24.04
            target: x86_64-unknown-linux-musl
            run: rustup target add x86_64-unknown-linux-musl

          - name: üê• Linux ARM64
            runner: ubuntu-24.04-arm
            target: aarch64-unknown-linux-musl
            run: rustup target add aarch64-unknown-linux-musl

          - name: üçé MacOS AMD64
            target: x86_64-apple-darwin
            runner: macos-13

          - name: üçé MacOS ARM64
            target: aarch64-apple-darwin
            runner: macos-15

          - name: üü¶ Windows AMD64
            target: x86_64-pc-windows-msvc
            runner: windows-latest

          - name: üü¶ Windows ARM64
            runner: windows-latest
            target: aarch64-pc-windows-msvc
            run: rustup target add aarch64-pc-windows-msvc

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.runner }}
    needs: 
      - "version"
    steps:
      - uses: actions/checkout@v4
      - run: eval $(curl -sSf sh.davidalsh.com/rust.sh | sh)
      - if: matrix.config.run
        run: ${{ matrix.config.run }}
      - run: sed -i "s/0.0.0-local/${VERSION}/g" Cargo.toml
        env:
          VERSION: ${{needs.version.outputs.VERSION}}
      - run: cargo build --release --target ${{ matrix.config.target }}
        # Optional, reduce the artifact size 
      - run: cd target/${{ matrix.config.target }}/release && rm -rf build .fingerprint deps examples incremental
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-${{ matrix.config.target }}
          path: ${{ github.workspace }}/target/**/*
          if-no-files-found: error
          retention-days: 1

  publish_github_release:
    name: "üîÑ Publish Github Release"
    runs-on: ubuntu-24.04
    needs:
      - test
      - format
      - build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: 
          pattern: ${{ env.PROJECT_NAME }}-*
          path: target
          merge-multiple: true

      - name: Publish` Github Release
        env:
          VERSION: ${{needs.version.outputs.VERSION}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e

          echo "Tag: ${TAG}"

          gh release create $TAG  --draft --notes "Automatically built binaries"
          gh release edit $TAG --title "üöÄ Latest"

          cd ${{ github.workspace }}/target/x86_64-unknown-linux-musl/release
          chmod +x cargo-xfmt
          tar -czf ./cargo-xfmt-linux-amd64.tar.gz cargo-xfmt
          gh release upload $TAG ${{ github.workspace }}/target/x86_64-unknown-linux-musl/release/cargo-xfmt.tar.gz

          cd ${{ github.workspace }}/target/aarch64-unknown-linux-musl/release
          chmod +x cargo-xfmt
          tar -czf ./cargo-xfmt-linux-arm64.tar.gz cargo-xfmt
          gh release upload $TAG target/aarch64-unknown-linux-musl/release/cargo-xfmt.tar.gz

          cd ${{ github.workspace }}/target/x86_64-apple-darwin/release
          chmod +x cargo-xfmt
          tar -czf ./cargo-xfmt-macos-amd64.tar.gz cargo-xfmt
          gh release upload $TAG target/x86_64-apple-darwin/release/cargo-xfmt.tar.gz

          cd ${{ github.workspace }}/target/aarch64-apple-darwin/release/release
          chmod +x cargo-xfmt
          tar -czf ./cargo-xfmt-macos-arm64.tar.gz cargo-xfmt
          gh release upload $TAG target/aarch64-apple-darwin/release/cargo-xfmt.tar.gz

          cd ${{ github.workspace }}/target/x86_64-pc-windows-msvc/release
          chmod +x cargo-xfmt.exe
          tar -czf ./cargo-xfmt-windows-amd64.tar.gz cargo-xfmt.exe
          gh release upload $TAG target/x86_64-pc-windows-msvc/release/cargo-xfmt.tar.gz

          cd ${{ github.workspace }}/target/aarch64-pc-windows-msvc/release
          chmod +x cargo-xfmt.exe
          tar -czf ./cargo-xfmt-windows-arm64.tar.gz cargo-xfmt.exe
          gh release upload $TAG target/aarch64-pc-windows-msvc/release/cargo-xfmt.tar.gz

          gh release edit $TAG --draft=false
